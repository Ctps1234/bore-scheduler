From 451b8fc5d2d9adf660e2432d7ebc194c2ee144bb Mon Sep 17 00:00:00 2001
From: Masahito S <firelzrd@gmail.com>
Date: Sat, 10 Feb 2024 11:44:22 +0900
Subject: [PATCH] Fix: se->load.weight == 0 might cause failure of eligibility
 test

---
 kernel/sched/fair.c | 20 ++++++++++++++------
 1 file changed, 14 insertions(+), 6 deletions(-)

diff --git a/kernel/sched/fair.c b/kernel/sched/fair.c
index 81d4f0b738..eb5d32b607 100644
--- a/kernel/sched/fair.c
+++ b/kernel/sched/fair.c
@@ -624,10 +624,18 @@ static inline s64 entity_key(struct cfs_rq *cfs_rq, struct sched_entity *se)
  *
  * As measured, the max (key * weight) value was ~44 bits for a kernel build.
  */
+static unsigned long entity_weight(struct sched_entity *se) {
+	unsigned long weight = se->load.weight;
+#ifdef CONFIG_64BIT
+	weight >>= SCHED_FIXEDPOINT_SHIFT;
+#endif
+	return max(1UL, weight);
+}
+
 static void
 avg_vruntime_add(struct cfs_rq *cfs_rq, struct sched_entity *se)
 {
-	unsigned long weight = scale_load_down(se->load.weight);
+	unsigned long weight = entity_weight(se);
 	s64 key = entity_key(cfs_rq, se);
 
 	cfs_rq->avg_vruntime += key * weight;
@@ -637,7 +645,7 @@ avg_vruntime_add(struct cfs_rq *cfs_rq, struct sched_entity *se)
 static void
 avg_vruntime_sub(struct cfs_rq *cfs_rq, struct sched_entity *se)
 {
-	unsigned long weight = scale_load_down(se->load.weight);
+	unsigned long weight = entity_weight(se);
 	s64 key = entity_key(cfs_rq, se);
 
 	cfs_rq->avg_vruntime -= key * weight;
@@ -664,7 +672,7 @@ u64 avg_vruntime(struct cfs_rq *cfs_rq)
 	long load = cfs_rq->avg_load;
 
 	if (curr && curr->on_rq) {
-		unsigned long weight = scale_load_down(curr->load.weight);
+		unsigned long weight = entity_weight(curr);
 
 		avg += entity_key(cfs_rq, curr) * weight;
 		load += weight;
@@ -731,7 +739,7 @@ static int vruntime_eligible(struct cfs_rq *cfs_rq, u64 vruntime)
 	long load = cfs_rq->avg_load;
 
 	if (curr && curr->on_rq) {
-		unsigned long weight = scale_load_down(curr->load.weight);
+		unsigned long weight = entity_weight(curr);
 
 		avg += entity_key(cfs_rq, curr) * weight;
 		load += weight;
@@ -5231,9 +5239,9 @@ place_entity(struct cfs_rq *cfs_rq, struct sched_entity *se, int flags)
 		 */
 		load = cfs_rq->avg_load;
 		if (curr && curr->on_rq)
-			load += scale_load_down(curr->load.weight);
+			load += entity_weight(curr);
 
-		lag *= load + scale_load_down(se->load.weight);
+		lag *= load + entity_weight(se);
 		if (WARN_ON_ONCE(!load))
 			load = 1;
 		lag = div64_s64(lag, load);
-- 
2.34.1

